/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface YieldLeverBaseInterface extends utils.Interface {
  functions: {
    "FLASH_LOAN_RETURN()": FunctionFragment;
    "cauldron()": FunctionFragment;
    "giver()": FunctionFragment;
    "ladle()": FunctionFragment;
    "onFlashLoan(address,address,uint256,uint256,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "FLASH_LOAN_RETURN"
      | "cauldron"
      | "giver"
      | "ladle"
      | "onFlashLoan"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "FLASH_LOAN_RETURN",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "cauldron", values?: undefined): string;
  encodeFunctionData(functionFragment: "giver", values?: undefined): string;
  encodeFunctionData(functionFragment: "ladle", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "onFlashLoan",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "FLASH_LOAN_RETURN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "cauldron", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "giver", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ladle", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onFlashLoan",
    data: BytesLike
  ): Result;

  events: {};
}

export interface YieldLeverBase extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: YieldLeverBaseInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    FLASH_LOAN_RETURN(overrides?: CallOverrides): Promise<[string]>;

    cauldron(overrides?: CallOverrides): Promise<[string]>;

    giver(overrides?: CallOverrides): Promise<[string]>;

    ladle(overrides?: CallOverrides): Promise<[string]>;

    onFlashLoan(
      initiator: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      borrowAmount: PromiseOrValue<BigNumberish>,
      fee: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  FLASH_LOAN_RETURN(overrides?: CallOverrides): Promise<string>;

  cauldron(overrides?: CallOverrides): Promise<string>;

  giver(overrides?: CallOverrides): Promise<string>;

  ladle(overrides?: CallOverrides): Promise<string>;

  onFlashLoan(
    initiator: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    borrowAmount: PromiseOrValue<BigNumberish>,
    fee: PromiseOrValue<BigNumberish>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    FLASH_LOAN_RETURN(overrides?: CallOverrides): Promise<string>;

    cauldron(overrides?: CallOverrides): Promise<string>;

    giver(overrides?: CallOverrides): Promise<string>;

    ladle(overrides?: CallOverrides): Promise<string>;

    onFlashLoan(
      initiator: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      borrowAmount: PromiseOrValue<BigNumberish>,
      fee: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    FLASH_LOAN_RETURN(overrides?: CallOverrides): Promise<BigNumber>;

    cauldron(overrides?: CallOverrides): Promise<BigNumber>;

    giver(overrides?: CallOverrides): Promise<BigNumber>;

    ladle(overrides?: CallOverrides): Promise<BigNumber>;

    onFlashLoan(
      initiator: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      borrowAmount: PromiseOrValue<BigNumberish>,
      fee: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    FLASH_LOAN_RETURN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    cauldron(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    giver(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ladle(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onFlashLoan(
      initiator: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      borrowAmount: PromiseOrValue<BigNumberish>,
      fee: PromiseOrValue<BigNumberish>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
