/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  YieldLeverBase,
  YieldLeverBaseInterface,
} from "../YieldLeverBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Giver",
        name: "giver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FLASH_LOAN_RETURN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cauldron",
    outputs: [
      {
        internalType: "contract ICauldron",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "giver",
    outputs: [
      {
        internalType: "contract Giver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ladle",
    outputs: [
      {
        internalType: "contract ILadle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516102c73803806102c783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161023c61008b6000396000610122015261023c6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806323e30c8b1461005c57806394b8e38f146100a857806397ff6a04146100db578063e7cddfb0146100f6578063fb775b461461011d575b600080fd5b61009561006a366004610160565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99695505050505050565b6040519081526020015b60405180910390f35b6100c3736cb18ff2a33e981d1e38a663ca056c0a5265066a81565b6040516001600160a01b03909116815260200161009f565b6100c373c88191f8cb8e6d4a668b047c1c8503432c3ca86781565b6100957f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6100c37f000000000000000000000000000000000000000000000000000000000000000081565b80356001600160a01b038116811461015b57600080fd5b919050565b60008060008060008060a0878903121561017957600080fd5b61018287610144565b955061019060208801610144565b94506040870135935060608701359250608087013567ffffffffffffffff808211156101bb57600080fd5b818901915089601f8301126101cf57600080fd5b8135818111156101de57600080fd5b8a60208285010111156101f057600080fd5b602083019450809350505050929550929550929556fea264697066735822122031bf93f54eb4d1e825e2c2c0c1284d669a027fe2ee7aa47b6132be39a6939baa64736f6c634300080e0033";

type YieldLeverBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldLeverBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldLeverBase__factory extends ContractFactory {
  constructor(...args: YieldLeverBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    giver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldLeverBase> {
    return super.deploy(giver_, overrides || {}) as Promise<YieldLeverBase>;
  }
  override getDeployTransaction(
    giver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(giver_, overrides || {});
  }
  override attach(address: string): YieldLeverBase {
    return super.attach(address) as YieldLeverBase;
  }
  override connect(signer: Signer): YieldLeverBase__factory {
    return super.connect(signer) as YieldLeverBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldLeverBaseInterface {
    return new utils.Interface(_abi) as YieldLeverBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldLeverBase {
    return new Contract(address, _abi, signerOrProvider) as YieldLeverBase;
  }
}
